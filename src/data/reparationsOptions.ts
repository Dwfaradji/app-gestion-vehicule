import { maintenanceCarrosseries, maintenanceParams } from "./maintenanceParams";

interface ReparationsOptions {
  M√©canique: Record<string, string[]>; // sous-cat√©gories
  "R√©vision g√©n√©rale": string[];
  Carrosserie: Record<string, string[]>;
}

// üîπ Sous-cat√©gories possibles pour la m√©canique
const mecaniqueGrouped: Record<string, string[]> = maintenanceParams
  .filter((p) => p.category === "M√©canique")
  .reduce(
    (acc, param) => {
      const group = param.subCategory || "Autres";
      if (!acc[group]) acc[group] = [];
      if (!acc[group].includes(param.type)) acc[group].push(param.type);
      return acc;
    },
    {} as Record<string, string[]>,
  );

// üîπ R√©vision g√©n√©rale : liste plate
const revisionList: string[] = maintenanceParams
  .filter((p) => p.category === "R√©vision g√©n√©rale")
  .map((p) => p.type);

// üîπ Sous-cat√©gories possibles pour la carrosserie
const carrosserieList: Record<string, string[]> = maintenanceCarrosseries
  .filter((p) => p.category === "Carrosserie")
  .reduce(
    (acc, param) => {
      const group = param.subCategory || "Autres";
      if (!acc[group]) acc[group] = [];
      if (!acc[group].includes(param.type)) acc[group].push(param.type);
      return acc;
    },
    {} as Record<string, string[]>,
  );

export const reparationsOptions: ReparationsOptions = {
  M√©canique: mecaniqueGrouped,
  "R√©vision g√©n√©rale": revisionList,
  Carrosserie: carrosserieList,
};

export default reparationsOptions;
